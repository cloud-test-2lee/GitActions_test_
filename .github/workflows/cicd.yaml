name: Build Image & Push an Image to ECR (CI)

on:
  push:
    branches: [main]

env:
  AWS_REGION: "ap-northeast-2"

permissions:
  id-token: write
  contents: write

jobs:
  ci:
    runs-on: ubuntu-latest
    outputs:
      IMAGE_TAG: ${{ steps.set-var.outputs.IMAGE_TAG }}
    steps:
      - name: Git-Checkout
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ secrets.ARN_ECR_PUSH_ROLE }}
          role-session-name: Private-ECR-PushRole
          aws-region: ${{ env.AWS_REGION }}

      - name: Login ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set variable
        id: set-variable
        run: |
          echo "ECR_REGISTRY=${{ steps.login-ecr.outputs.registry }}" >> $GITHUB_ENV
          echo "ECR_REPOSITORY=lee-repo" >> $GITHUB_ENV
          echo "IMAGE_TAG=${{ github.sha }}" >> $GITHUB_ENV

      - name: Set up Docker buildx
        uses: docker/setup-buildx-action@v1
      
      #- name: Cache Docker layers
      #  uses: actions/cache@v2
      #  with:
      #    path: /tmp/.buildx-cache
      #    key: ${{ runner.os }}-buildx-${{ github.sha }}
      #    restore-keys: |
      #      ${{ runner.os }}-buildx-

      #- name: Docker Build & Push
      #  uses: docker/build-push-action@v2
      #  with:
      #    context: .
      #    file: ./Dockerfile
      #    push: true
      #    tags: $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
      #    cache-from: type=local,src=/tmp/.buildx-cache
      #    cache-to: type=local,dest=/tmp/.buildx-cache
      
      - name: Docker build
        id: build-image
        run: |
          docker buildx build --platform linux/amd64,linux/arm64 \
            -f Dockerfile \
            -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
      
      - name: Docker Image Taging
        id: image-taging
        run: |
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:latest $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
            

      - name: Docker Image Push
        id: image-push
        run: |
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Checkout for Kustomize repository
        uses: actions/checkout@v2
        with:
          # kubernetes yaml 파일 저장
          repository: cloud-test-2lee/Kustomize_test_
          ref: main
          token: ${{ secrets.ACTION_TOKEN }} # Repository Token 은 미리 발급받야아합니다.
          path: Kustomize_test_

      - name: Update k8s resource
        run: |
          pwd
          cd Kustomize_test_/overlays/dev
          echo \${{ steps.login-ecr.outputs.registry }}/\${{ env.ECR_REPOSITORY }}:$IMAGE_TAG
          kustomize edit set image \${{ steps.login-ecr.outputs.registry }}/\${{ env.ECR_REPOSITORY }}=\${{ steps.login-ecr.outputs.registry }}/\${{ env.ECR_REPOSITORY }}:$IMAGE_TAG
          cat kustomization.yml

      - name: Commit Manifest files
        run: |
          cd Kustomize_test_
          git config --global user.email "euijoo3233@gmail.com"
          git config --global user.name "euijoo"
          git add .
          git commit -m "Update Manifest file Image Tag $IMAGE_TAG"
          git push -u origin main
          

      - name: action-slack
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          author_name: Leeeuijooo-gitactions-test
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always()







